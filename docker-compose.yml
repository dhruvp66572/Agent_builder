version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:13-alpine
    container_name: agentbuilder-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-agent_builder}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - agentbuilder-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-agent_builder}"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Backend API
  backend:
    image: agentbuilder/backend:latest
    container_name: agentbuilder-backend
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB:-agent_builder}
      
      # API Keys
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      SERPAPI_KEY: ${SERPAPI_KEY}
      
      # Application Configuration
      SECRET_KEY: ${SECRET_KEY}
      ENVIRONMENT: ${ENVIRONMENT:-production}
      DEBUG: ${DEBUG:-false}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      
      # CORS Configuration
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost}
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:3000}
      
      # File Storage
      CHROMA_DB_PATH: /app/chroma_db
      MAX_UPLOAD_SIZE: ${MAX_UPLOAD_SIZE:-50000000}
      
      # Rate Limiting
      RATE_LIMIT_REQUESTS: ${RATE_LIMIT_REQUESTS:-100}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW:-3600}
    volumes:
      - chroma_data:/app/chroma_db
      - uploads_data:/app/uploads
    ports:
      - "8000:8000"
    networks:
      - agentbuilder-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Frontend
  frontend:
    image: agentbuilder/frontend:latest
    container_name: agentbuilder-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:8000}
      REACT_APP_ENVIRONMENT: ${ENVIRONMENT:-production}
    ports:
      - "3000:3000"
    networks:
      - agentbuilder-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: agentbuilder-nginx
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - agentbuilder-network

volumes:
  postgres_data:
    driver: local
  chroma_data:
    driver: local
  uploads_data:
    driver: local

networks:
  agentbuilder-network:
    driver: bridge